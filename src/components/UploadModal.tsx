import React, { useState } from 'react'
import { uploadDocument } from '../shared/adminApi'
import ChunkPreviewer from './ChunkPreviewer'

type UploadModalProps = {
  isOpen: boolean
  onClose: () => void
  onSuccess: (result: any) => void
  communityId: number
}

export default function UploadModal({ isOpen, onClose, onSuccess, communityId }: UploadModalProps) {
  const [loading, setLoading] = useState(false)
  const [selectedFile, setSelectedFile] = useState<File | null>(null)
  const [showProgress, setShowProgress] = useState(false)
  const [uploadProgress, setUploadProgress] = useState(0)
  const [autoModeNotice, setAutoModeNotice] = useState('')
  const [status, setStatus] = useState('')

  const validateFileSize = (file: File): boolean => {
    const maxSize = 25 * 1024 * 1024 // 25MB
    if (file.size > maxSize) {
      setStatus('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 25MB')
      return false
    }
    return true
  }

  const onUpload = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault()
    const fd = new FormData(e.currentTarget)
    const file = fd.get('file') as File
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    if (!file || !validateFileSize(file)) {
      return
    }

    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π
    setShowProgress(false)
    setUploadProgress(0)
    setAutoModeNotice('')
    setStatus('')

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    if (file.size > 5 * 1024 * 1024) { // 5MB
      setShowProgress(true)
      setStatus('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
    } else {
      setStatus('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞...')
    }

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    if (file.size > 10 * 1024 * 1024) { // 10MB
      setAutoModeNotice('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º "Smart" –¥–ª—è —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ 10MB')
    }

    fd.set('community_id', String(communityId))
    setLoading(true)
    
    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    let progressInterval: NodeJS.Timeout | null = null
    if (file.size > 5 * 1024 * 1024) {
      progressInterval = setInterval(() => {
        setUploadProgress(prev => {
          if (prev >= 90) return prev
          return prev + Math.random() * 10
        })
      }, 1000)
    }
    
    try {
      const r = await uploadDocument(fd)
      setUploadProgress(100)
      onSuccess(r)
      onClose()
    } catch (err: any) {
      if (err.code === 'ECONNABORTED' || err.message?.includes('timeout')) {
        setStatus('‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ —Ç–∞–π–º–∞—É—Ç—É. –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º "Smart" –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ.')
      } else if (err.response?.status === 413) {
        setStatus('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 25MB')
      } else if (err.response?.status === 500) {
        setStatus('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ñ–∞–π–ª –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∂–∏–º "Smart".')
      } else {
        setStatus(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${err.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      }
    } finally {
      setLoading(false)
      setShowProgress(false)
      setUploadProgress(0)
      if (progressInterval) {
        clearInterval(progressInterval)
      }
    }
  }

  if (!isOpen) return null

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000,
      padding: '20px'
    }}>
      <div style={{
        background: 'var(--surface)',
        borderRadius: 'var(--radius-lg)',
        width: '100%',
        maxWidth: '600px',
        maxHeight: '90vh',
        display: 'flex',
        flexDirection: 'column',
        boxShadow: 'var(--shadow-lg)',
        overflow: 'hidden'
      }}>
        {/* Header */}
        <div style={{
          padding: '20px',
          borderBottom: '1px solid var(--border)',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <h2 style={{ margin: 0, fontSize: '20px' }}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞</h2>
          <button
            onClick={onClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              color: 'var(--text-muted)',
              padding: '4px'
            }}
          >
            √ó
          </button>
        </div>

        {/* Content */}
        <div style={{
          flex: 1,
          overflow: 'auto',
          padding: '20px'
        }}>
          {/* Status Messages */}
          {status && (
            <div className={`status ${status.includes('—É—Å–ø–µ—à–Ω–æ') ? 'success' : status.includes('–û—à–∏–±–∫–∞') || status.includes('‚ùå') ? 'error' : 'info'}`}>
              {status}
            </div>
          )}

          {/* Auto Mode Notice */}
          {autoModeNotice && (
            <div className="auto-mode-notice">
              {autoModeNotice}
            </div>
          )}

          {/* Progress Indicator */}
          {showProgress && (
            <div className="progress-indicator">
              <div className="progress-bar">
                <div className="progress-fill" style={{ width: `${uploadProgress}%` }}></div>
              </div>
              <div className="progress-text">
                –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞... {Math.round(uploadProgress)}%
              </div>
            </div>
          )}

          <form onSubmit={onUpload} className="col" style={{ maxWidth: '100%' }}>
            <div>
              <label style={{ 
                display: 'block', 
                marginBottom: '6px', 
                fontSize: '14px', 
                fontWeight: '500',
                color: 'var(--text-primary)'
              }}>
                –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ *
              </label>
              <input 
                name="title" 
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞" 
                required 
                disabled={loading}
              />
            </div>
            
            <div>
              <label style={{ 
                display: 'block', 
                marginBottom: '6px', 
                fontSize: '14px', 
                fontWeight: '500',
                color: 'var(--text-primary)'
              }}>
                –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ *
              </label>
              <select name="doc_type" required disabled={loading}>
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</option>
                <option value="CC&R">CC&R (–£—Å–ª–æ–≤–∏—è, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –ø—Ä–∞–≤–∏–ª–∞)</option>
                <option value="Bylaws">Bylaws (–£—Å—Ç–∞–≤)</option>
                <option value="Rules">Rules (–ü—Ä–∞–≤–∏–ª–∞)</option>
                <option value="Policy">Policy (–ü–æ–ª–∏—Ç–∏–∫–∞)</option>
                <option value="Guidelines">Guidelines (–†—É–∫–æ–≤–æ–¥—è—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã)</option>
              </select>
            </div>
            
            <div>
              <label style={{ 
                display: 'block', 
                marginBottom: '6px', 
                fontSize: '14px', 
                fontWeight: '500',
                color: 'var(--text-primary)'
              }}>
                –í–∏–¥–∏–º–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞
              </label>
              <select name="visibility" defaultValue="resident" disabled={loading}>
                <option value="resident">üë• –ñ–∏—Ç–µ–ª–∏ (Resident)</option>
                <option value="board">üëî –ü—Ä–∞–≤–ª–µ–Ω–∏–µ (Board)</option>
                <option value="staff">üè¢ –û—Ñ–∏—Å (Staff)</option>
              </select>
            </div>
            
            <div>
              <label style={{ 
                display: 'block', 
                marginBottom: '6px', 
                fontSize: '14px', 
                fontWeight: '500',
                color: 'var(--text-primary)'
              }}>
                –§–∞–π–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞ *
              </label>
              <input 
                type="file" 
                name="file" 
                accept=".pdf,.txt" 
                required 
                disabled={loading}
                style={{ padding: '8px' }}
                onChange={(e) => {
                  const file = e.target.files?.[0]
                  setSelectedFile(file)
                  setAutoModeNotice('')
                  
                  if (file) {
                    const fileSizeMB = (file.size / 1024 / 1024).toFixed(2)
                    
                    if (file.size > 25 * 1024 * 1024) {
                      setStatus('‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 25MB')
                    } else if (file.size > 10 * 1024 * 1024) {
                      setStatus(`‚ö†Ô∏è –ë–æ–ª—å—à–æ–π —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω (${fileSizeMB} MB). –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...`)
                      setAutoModeNotice('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º "Smart" –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏')
                    } else if (file.size > 5 * 1024 * 1024) {
                      setStatus(`üìÑ –§–∞–π–ª —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ (${fileSizeMB} MB). –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è...`)
                    } else {
                      setStatus('')
                    }
                  } else {
                    setStatus('')
                  }
                }}
              />
              <p className="muted" style={{ margin: '4px 0 0 0', fontSize: '12px' }}>
                –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, TXT (–º–∞–∫—Å–∏–º—É–º 25MB)
              </p>
            </div>
            
            <button 
              type="submit" 
              className="btn-primary"
              disabled={loading}
              style={{ alignSelf: 'flex-start', marginTop: '8px' }}
            >
              {loading ? '‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç...' : 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç'}
            </button>
          </form>
          
          {/* Chunk Previewer */}
          <ChunkPreviewer file={selectedFile} />
        </div>
      </div>
    </div>
  )
}
